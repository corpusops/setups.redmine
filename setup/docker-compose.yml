version: '3.8'
x-images:
  env: &env
    env_file: [.env]
services:
  backup:
    <<: [ *env ]
    image: "corpusops/dbsmartbackup:mysql-5.7"
    volumes: [redmine-backups:/var/db_smart_backup]
  db:
    <<: [ *env ]
    image: "{{cops_redmine_mysql_image}}"
    volumes: [redmine-db:/var/lib/mysql]
  setup-services:
    <<: [ *env ]
    image: "{{cops_redmine_mysql_image}}"
    depends_on: [db]
    entrypoint:
    - /bin/sh
    - '-c'
    - |-
      set -ex
      flag=/started_$$(echo $$MYSQL_DB|sed -re "s![/:]!__!g")
      if [ -e "$$flag" ];then rm -f "$$flag";fi
      echo "Try connection to mysql: $$MYSQL_DB & wait for db init" >&2
      ( while true;do if ( echo "select 1" | mysql );then touch $$flag && break;fi;done )&
      set -x
      dockerize -wait file://$$flag -timeout $${MYSQL_STARTUP_TIMEOUT}
      : create all needed databases
      for i in $$REDMINE_DB_DATABASE;do
        if ! ( echo "select 1" | mysql $$i );then
          echo "Creating db $$i"
          mysql -e "CREATE DATABASE $$i DEFAULT CHARACTER SET \`utf8\` COLLATE \`utf8_unicode_ci\`"
        fi;
      done
      set +x
      mysql -e "GRANT ALL PRIVILEGES ON $$REDMINE_DB_DATABASE.* TO '$$REDMINE_DB_USERNAME'@'%' \
                IDENTIFIED BY '$$MYSQL_PASSWORD';FLUSH PRIVILEGES;"
      set -x
      while true;do printf "HTTP/1.1 200 OK\n\nstarted"| ( nc -l -p 80 || /bin/true);done
  helpers:
    image: corpusops/project:helpers-ubuntu-22.04
    volumes: [helpers:/helpers]
  redmine:
    <<: [ *env ]
    build: {context: '.'}
    image: "redminelocal-${REDMINE_VERSION}"
    entrypoint:
    - /bin/bash
    - '-exc'
    - |-
      export PATH=/helpers:$$PATH
      until (dockerize --version &>/dev/null);do sleep 0.1;done
      dockerize -wait http://setup-services -timeout $${MYSQL_STARTUP_TIMEOUT}
      # handle both configs generated via ansible & templates to render at runtime
      ( [ -e /conf ] || mkdir -pv /conf ) && cp -vrf /conf.d/* /conf
      while read f;do echo "Gen> $$f" >&2;frep $$f:/conf/$$(basename $$f .frep) --overwrite;done < <(find /conf -name *frep)
      cp -rfv /conf/* /usr/src/redmine/config
      exec /docker-entrypoint.sh rails server -b 0.0.0.0
      #exec /docker-entrypoint.sh passenger start
    volumes:
    - helpers:/helpers
    - redmine-data:/usr/src/redmine/files
    - ./conf:/conf.d
    depends_on: [setup-services]
  traefik:
    <<: [ *env ]
    image: corpusops/traefik:v2.9
    volumes: [./traefik:/etc/traefik]
    ports:
    - "${REDMINE_HTTP_PORT:-80}:80"
    - "${REDMINE_HTTPS_PORT:-443}:443"
{%- if cops_redmine_has_mailcatcher %}
  mailcatcher:
    <<: [ *env ]
    image: "corpusops/project:mailhog"
    volumes: ["mails:/mails"]
{%- endif %}
volumes:
{%- if cops_redmine_has_mailcatcher %}
  mails:
{%- endif %}
  helpers:
  redmine-db: {name: "${COMPOSE_PROJECT_NAME}-redmine-db", external: false}
  redmine-data: {name: "${COMPOSE_PROJECT_NAME}-redmine-data", external: false}
  redmine-logs: {name: "${COMPOSE_PROJECT_NAME}-redmine-logs", external: false}
  redmine-backups: {name: "${COMPOSE_PROJECT_NAME}-redmine-backups", external: false}
